;;; modus-vivendi-theme.el --- Accessible dark theme (WCAG AAA) -*- lexical-binding:t -*-

;; Copyright (c) 2019 Protesilaos Stavrou <info@protesilaos.com>

;; Author: Protesilaos Stavrou <info@protesilaos.com>
;; URL: https://gitlab.com/protesilaos/modus-themes
;; Version: 0.1.0
;; Package-Requires: ((emacs "25.1"))
;; Keywords: faces, theme, accessibility

;; This file is NOT part of GNU Emacs.

;; This program is free software; you can redistribute it and/or
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

;;; Commentary:
;;
;; This theme is designed for colour-contrast accessibility.
;;
;; 1. Provide a consistent minimum contrast ratio between background and
;; foreground values of 7:1 or higher.  This meets the highest such
;; accessibility criterion per the guidelines of the Worldwide Web
;; Consortium's Working Group on Accessibility (WCAG AAA standard).
;;
;; 2. Offer as close to full face coverage as possible.  The output of
;; `list-faces-display' offers all we need.  Note though, that it is
;; difficult to create theme styles without actually using the
;; packages/interfaces that require them.  As such, the development of
;; this theme will be incremental, gradually incorporating the
;; customisations for packages I use or have been exposed to.

;;; Code:

(deftheme modus-vivendi
  "Dark theme that conforms with the highest accessibility
  standard for colour contrast between background and
  foreground elements (WCAG AAA).")

;; These faces will be inherited by actual constructs.  They are meant
;; for those cases where a face needs to distinguish its output from
;; the rest of the text, such as `isearch' and `occur'â€¦  We define
;; these separately in order to combine each colour with its
;; appropriate foreground value.  This is to ensure a consistent
;; contrast ratio of >= 7:1.
(defgroup modus-theme ()
  "Theme that ensures WCAG AAA accessibility (contrast ratio
between foreground and background is >= 7:1)."
  :group 'faces
  :prefix "modus-theme-"
  :link '(url-link :tag "GitLab" "https://gitlab.com/protesilaos/modus-themes")
  :tag "Modus Vivendi")

(defface modus-theme-subtle-red nil t)
(defface modus-theme-subtle-green nil t)
(defface modus-theme-subtle-yellow nil t)
(defface modus-theme-subtle-blue nil t)
(defface modus-theme-subtle-magenta nil t)
(defface modus-theme-subtle-cyan nil t)
(defface modus-theme-subtle-neutral nil t)
(defface modus-theme-intense-red nil t)
(defface modus-theme-intense-green nil t)
(defface modus-theme-intense-yellow nil t)
(defface modus-theme-intense-blue nil t)
(defface modus-theme-intense-magenta nil t)
(defface modus-theme-intense-cyan nil t)
(defface modus-theme-intense-neutral nil t)
(defface modus-theme-refine-red nil t)
(defface modus-theme-refine-green nil t)
(defface modus-theme-refine-yellow nil t)
(defface modus-theme-refine-blue nil t)
(defface modus-theme-refine-magenta nil t)
(defface modus-theme-refine-cyan nil t)
(defface modus-theme-special-cold nil t)
(defface modus-theme-special-mild nil t)
(defface modus-theme-special-warm nil t)

;; Define colour palette.  Each colour must have a >= 7:1 contrast
;; ratio relative to the foreground/background colour it is rendered
;; against.
(let ((class '((class color) (min-colors 89)))
      (fg-main "#ffffff") (bg-main "#000000")
      (fg-alt "#d8cdcf") (bg-alt "#181a20")
      (fg-dim "#e0e6f0") (bg-dim "#110b11")
      ;; specifically for on/off states (e.g. mode-line)
      ;; must be combined with themselves
      (fg-active "#f5f5f5") (bg-active "#454545")
      (fg-inactive "#bebebe") (bg-inactive "#303030")
      ;; special base values, used only for cases where the above
      ;; fg-* or bg-* cannot or should not be used (to avoid confusion)
      ;; must be combined with: {fg,bg}-{main,alt,dim}
      (fg-special-cold "#c0e0ff") (bg-special-cold "#1e283a")
      (fg-special-mild "#e0ffeb") (bg-special-mild "#2f5a4e")
      (fg-special-warm "#f8dec0") (bg-special-warm "#382f27")
      ;; styles for the main constructs
      ;; must be combined with: bg-main, bg-alt, bg-dim
      (red "#ff8059") (green "#44bc44")
      (yellow "#eecc00") (blue "#33beff")
      (magenta "#feacd0") (cyan "#00d3d0")
      ;; styles for common, but still specialised constructs
      ;; must be combined with: bg-main, bg-alt, bg-dim
      (red-alt "#f4923b") (green-alt "#58dd13")
      (yellow-alt "#f0ce43") (blue-alt "#72a4ff")
      (magenta-alt "#ed92f8") (cyan-alt "#4ae8fc")
      ;; same purpose as above, just slight differences
      ;; must be combined with: bg-main, bg-alt, bg-dim
      (red-alt-other "#ff9977") (green-alt-other "#90d800")
      (yellow-alt-other "#e0e040") (blue-alt-other "#00baf4")
      (magenta-alt-other "#b6a0ff") (cyan-alt-other "#6ae4b9")
      ;; styles for elements that should draw attention to themselves
      ;; must be combined with: bg-main
      (red-intense "#fb6859") (green-intense "#00fc50")
      (yellow-intense "#ffdd00") (blue-intense "#00a2ff")
      (magenta-intense "#ff8bd4") (cyan-intense "#30ffc0")
      ;; styles for background elements that should be visible yet
      ;; subtle
      ;; must be combined with: fg-dim
      (red-subtle-bg "#762422") (green-subtle-bg "#2f4a00")
      (yellow-subtle-bg "#654230") (blue-subtle-bg "#2a2f90")
      (magenta-subtle-bg "#5d2975") (cyan-subtle-bg "#00415e")
      ;; styles for background elements that should be visible and
      ;; distinguishable
      ;; must be combined with: fg-main
      (red-intense-bg "#a4202a") (green-intense-bg "#006800")
      (yellow-intense-bg "#625a00") (blue-intense-bg "#2844b8")
      (magenta-intense-bg "#7042a2") (cyan-intense-bg "#005f88")
      ;; styles for refined git diffs and other contexts where both the
      ;; foreground and the background need to have the same/similar hue
      ;;
      ;; must be combined with themselves OR the foregrounds can be
      ;; combined with any of the base backgrounds where subtle shades
      ;; are needed
      (red-refine-bg "#77002a") (green-refine-bg "#00422a")
      (yellow-refine-bg "#755000") (blue-refine-bg "#2222aa")
      (magenta-refine-bg "#572f77") (cyan-refine-bg "#004f80")
      (red-refine-fg "#ffb9ab") (green-refine-fg "#9ff0cf")
      (yellow-refine-fg "#ffffcc") (blue-refine-fg "#adddff")
      (magenta-refine-fg "#ffccff") (cyan-refine-fg "#afffff"))
  (custom-theme-set-faces
   'modus-vivendi
   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   ;; custom faces that are inherited by other constructs below ;;
   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   ;;; subtle coloured backgrounds
   `(modus-theme-subtle-red ((,class (:background ,red-subtle-bg :foreground ,fg-dim))))
   `(modus-theme-subtle-green ((,class (:background ,green-subtle-bg :foreground ,fg-dim))))
   `(modus-theme-subtle-yellow ((,class (:background ,yellow-subtle-bg :foreground ,fg-dim))))
   `(modus-theme-subtle-blue ((,class (:background ,blue-subtle-bg :foreground ,fg-dim))))
   `(modus-theme-subtle-magenta ((,class (:background ,magenta-subtle-bg :foreground ,fg-dim))))
   `(modus-theme-subtle-cyan ((,class (:background ,cyan-subtle-bg :foreground ,fg-dim))))
   `(modus-theme-subtle-neutral ((,class (:background ,bg-alt :foreground ,fg-alt))))
   ;;; intense coloured backgrounds
   `(modus-theme-intense-red ((,class (:background ,red-intense-bg :foreground ,fg-main))))
   `(modus-theme-intense-green ((,class (:background ,green-intense-bg :foreground ,fg-main))))
   `(modus-theme-intense-yellow ((,class (:background ,yellow-intense-bg :foreground ,fg-main))))
   `(modus-theme-intense-blue ((,class (:background ,blue-intense-bg :foreground ,fg-main))))
   `(modus-theme-intense-magenta ((,class (:background ,magenta-intense-bg :foreground ,fg-main))))
   `(modus-theme-intense-cyan ((,class (:background ,cyan-intense-bg :foreground ,fg-main))))
   `(modus-theme-intense-neutral ((,class (:background ,bg-dim :foreground ,fg-main))))
   ;;; refined background and foreground combinations
   `(modus-theme-refine-red ((,class (:background ,red-refine-bg :foreground ,red-refine-fg))))
   `(modus-theme-refine-green ((,class (:background ,green-refine-bg :foreground ,green-refine-fg))))
   `(modus-theme-refine-yellow ((,class (:background ,yellow-refine-bg :foreground ,yellow-refine-fg))))
   `(modus-theme-refine-blue ((,class (:background ,blue-refine-bg :foreground ,blue-refine-fg))))
   `(modus-theme-refine-magenta ((,class (:background ,magenta-refine-bg :foreground ,magenta-refine-fg))))
   `(modus-theme-refine-cyan ((,class (:background ,cyan-refine-bg :foreground ,cyan-refine-fg))))
   ;;; special base values that are closer the grayscale than
   ;;; the accents defined above
   `(modus-theme-special-cold ((,class (:background ,bg-special-cold :foreground ,fg-special-cold))))
   `(modus-theme-special-mild ((,class (:background ,bg-special-mild :foreground ,fg-special-mild))))
   `(modus-theme-special-warm ((,class (:background ,bg-special-warm :foreground ,fg-special-warm))))
   ;;;;;;;;;;;;;;;;;;;
   ;; actual styles ;;
   ;;;;;;;;;;;;;;;;;;;
   ;;; default constructs
   ;;;; absolute essentials
   `(default ((,class (:background ,bg-main :foreground ,fg-main))))
   `(cursor ((,class (:background ,fg-main))))
   `(fringe ((,class (:inherit (default)))))
   ;;;; basic and/or ungrouped styles
   `(error ((,class (:background ,bg-main :foreground ,red-intense :weight bold))))
   `(escape-glyph ((,class (:inherit (modus-theme-refine-blue) :weight bold))))
   `(header-line ((,class (:background ,bg-alt :foreground ,fg-alt))))
   `(homoglyph ((,class (:foreground ,yellow-alt-other))))
   `(ibuffer-locked-buffer ((,class (:foreground ,yellow-alt-other))))
   `(italic ((,class (:foreground ,fg-special-cold :slant italic)))) ; add colour because some fonts do not provide italics
   `(nobreak-hyphen ((,class (:inherit (modus-theme-refine-cyan)))))
   `(nobreak-space ((,class (:inherit (modus-theme-refine-cyan) :underline t))))
   `(minibuffer-prompt ((,class (:foreground ,cyan-intense))))
   `(mm-command-output ((,class (:foreground ,red-alt-other))))
   `(next-error ((,class (:inherit (modus-theme-subtle-red)))))
   `(shadow ((,class (:foreground ,fg-alt))))
   `(success ((,class (:background ,bg-main :foreground ,green-intense :weight bold))))
   `(trailing-whitespace ((,class (:background ,red-alt))))
   `(warning ((,class (:background ,bg-main :foreground ,yellow-intense :weight bold))))
   ;;;; all-the-icons
   `(all-the-icons-blue ((,class (:foreground ,blue))))
   `(all-the-icons-blue-alt ((,class (:foreground ,blue-alt))))
   `(all-the-icons-cyan ((,class (:foreground ,cyan))))
   `(all-the-icons-cyan-alt ((,class (:foreground ,cyan-alt))))
   `(all-the-icons-dblue ((,class (:foreground ,blue-alt-other))))
   `(all-the-icons-dcyan ((,class (:foreground ,cyan-alt-other))))
   `(all-the-icons-dgreen ((,class (:foreground ,green-alt-other))))
   `(all-the-icons-dmaroon ((,class (:foreground ,magenta-alt-other))))
   `(all-the-icons-dorange ((,class (:foreground ,red-alt-other))))
   `(all-the-icons-dpink ((,class (:foreground ,magenta))))
   `(all-the-icons-dpurple ((,class (:foreground ,magenta-alt))))
   `(all-the-icons-dred ((,class (:foreground ,red))))
   `(all-the-icons-dsilver ((,class (:foreground ,fg-special-cold))))
   `(all-the-icons-dyellow ((,class (:foreground ,yellow))))
   `(all-the-icons-green ((,class (:foreground ,green))))
   `(all-the-icons-lblue ((,class (:foreground ,blue-refine-fg))))
   `(all-the-icons-lcyan ((,class (:foreground ,cyan-refine-fg))))
   `(all-the-icons-lgreen ((,class (:foreground ,green-refine-fg))))
   `(all-the-icons-lmaroon ((,class (:foreground ,magenta-refine-fg))))
   `(all-the-icons-lorange ((,class (:foreground ,red-refine-fg))))
   `(all-the-icons-lpink ((,class (:foreground ,magenta-refine-fg))))
   `(all-the-icons-lpurple ((,class (:foreground ,magenta-refine-fg))))
   `(all-the-icons-lred ((,class (:foreground ,red-refine-fg))))
   `(all-the-icons-lsilver ((,class (:foreground ,fg-special-cold))))
   `(all-the-icons-lyellow ((,class (:foreground ,yellow-refine-fg))))
   `(all-the-icons-maroon ((,class (:foreground ,magenta))))
   `(all-the-icons-orange ((,class (:foreground ,red-alt))))
   `(all-the-icons-pink ((,class (:foreground ,magenta))))
   `(all-the-icons-purple ((,class (:foreground ,magenta-alt))))
   `(all-the-icons-purple-alt ((,class (:foreground ,magenta-alt-other))))
   `(all-the-icons-red ((,class (:foreground ,red))))
   `(all-the-icons-red-alt ((,class (:foreground ,red-alt))))
   `(all-the-icons-silver ((,class (:foreground ,fg-special-cold))))
   `(all-the-icons-yellow ((,class (:foreground ,yellow))))
   ;;;; anzu
   `(anzu-match-1 ((,class (:inherit (modus-theme-intense-cyan)))))
   `(anzu-match-2 ((,class (:inherit (modus-theme-intense-green)))))
   `(anzu-match-3 ((,class (:inherit (modus-theme-intense-yellow)))))
   `(anzu-mode-line ((,class (:background ,bg-main :foreground ,green-intense :weight bold))))
   `(anzu-mode-line-no-match ((,class (:background ,bg-main :foreground ,red-intense :weight bold))))
   `(anzu-replace-highlight ((,class (:inherit (modus-theme-intense-green) :weight bold))))
   `(anzu-replace-to ((,class (:inherit (modus-theme-intense-magenta)))))
   ;;;; artbollocks-mode
   `(artbollocks-face ((,class (:background ,bg-alt :foreground ,magenta-alt-other :underline (:style wave)))))
   `(artbollocks-lexical-illusions-face ((,class (:inherit (modus-theme-refine-magenta) :underline (:style wave)))))
   `(artbollocks-passive-voice-face ((,class (:background ,bg-alt :foreground ,cyan-alt-other :underline (:style wave)))))
   `(artbollocks-weasel-words-face ((,class (:background ,bg-alt :foreground ,yellow-alt-other :underline (:style wave)))))
   ;;;; avy
   `(avy-background-face ((,class (:background ,bg-dim :foreground ,fg-dim))))
   `(avy-goto-char-timer-face ((,class (:background ,magenta-intense :foreground ,bg-main))))
   `(avy-lead-face ((,class (:background ,yellow-intense :foreground ,bg-main))))
   `(avy-lead-face-0 ((,class (:background ,blue-intense :foreground ,bg-main))))
   `(avy-lead-face-1 ((,class (:background ,red-intense :foreground ,bg-main))))
   `(avy-lead-face-2 ((,class (:background ,green-intense :foreground ,bg-main))))
   ;;;; aw
   `(aw-background-face ((,class (:background ,bg-dim :foreground ,fg-dim))))
   `(aw-key-face ((,class (:background ,bg-main :foreground ,magenta-intense :weight bold))))
   `(aw-leading-char-face ((,class (:background ,bg-main :foreground ,red-intense :weight bold))))
   `(aw-minibuffer-leading-char-face ((,class (:background ,bg-main :foreground ,red-intense))))
   `(aw-mode-line-face ((,class (:weight bold))))
   ;;;; buttons, links, widgets
   `(button ((,class (:underline (:color foreground-color :style line) :foreground ,blue-alt-other))))
   `(link ((,class (:inherit button))))
   `(link-visited ((,class (:inherit (button) :foreground ,magenta-alt-other))))
   `(tooltip ((,class (:inherit (modus-theme-subtle-yellow)))))
   `(widget-button ((,class (:inherit (button)))))
   `(widget-button-pressed ((,class (:inherit (button) :foreground ,magenta))))
   `(widget-documentation ((,class (:foreground ,green))))
   `(widget-field ((,class (:background ,bg-alt :foreground ,fg-dim))))
   `(widget-inactive ((,class (:background ,bg-inactive :foreground ,fg-inactive))))
   `(widget-single-line-field ((,class (:inherit (widget-field)))))
   ;;;; company-mode
   `(company-echo-common ((,class (:foreground ,magenta-alt-other))))
   `(company-preview ((,class (:inherit (modus-theme-intense-neutral)))))
   `(company-preview-common ((,class (:foreground ,magenta-alt-other))))
   `(company-scrollbar-bg ((,class (:background ,bg-active))))
   `(company-scrollbar-fg ((,class (:background ,fg-active))))
   `(company-template-field ((,class (:inherit (modus-theme-intense-magenta)))))
   `(company-tooltip ((,class (:background ,bg-alt))))
   `(company-tooltip-annotation ((,class (:foreground ,magenta-alt-other))))
   `(company-tooltip-annotation-selection ((,class (:foreground ,fg-main :weight bold))))
   `(company-tooltip-common ((,class (:foreground ,magenta-alt-other))))
   `(company-tooltip-common-selection ((,class (:foreground ,fg-main :weight bold))))
   `(company-tooltip-mouse ((,class (:inherit (modus-theme-intense-blue)))))
   `(company-tooltip-search ((,class (:inherit (modus-theme-subtle-green)))))
   `(company-tooltip-search-selection ((,class (:inherit (modus-theme-intense-green)))))
   `(company-tooltip-selection ((,class (:inherit (modus-theme-intense-cyan)))))
   ;;;; compilation feedback
   `(compilation-column-number ((,class (:background ,bg-main :foreground ,green-intense))))
   `(compilation-error ((,class (:background ,bg-main :foreground ,red-intense :weight bold))))
   `(compilation-info ((,class (:background ,bg-dim :foreground ,green))))
   `(compilation-line-number ((,class (:background ,bg-main :foreground ,magenta-intense))))
   `(compilation-mode-line-exit ((,class (:background ,bg-main :foreground ,blue-intense :weight bold))))
   `(compilation-mode-line-fail ((,class (:background ,bg-main :foreground ,red-intense :weight bold))))
   `(compilation-mode-line-run ((,class (:background ,bg-main :foreground ,cyan-intense :weight bold))))
   `(compilation-warning ((,class (:background ,bg-main :foreground ,yellow-intense :weight bold))))
   ;;;; completions
   `(completions-annotations ((,class (:inherit (italic)))))
   `(completions-common-part ((,class nil)))
   `(completions-first-difference ((,class (:inherit (bold)))))
   ;;;; deadgrep
   `(deadgrep-filename-face ((,class (:foreground ,cyan :weight bold))))
   `(deadgrep-match-face ((,class (:inherit (modus-theme-subtle-blue)))))
   `(deadgrep-meta-face ((,class (:foreground ,fg-alt))))
   `(deadgrep-regexp-metachar-face ((,class (:foreground ,yellow-intense :weight bold))))
   `(deadgrep-search-term-face ((,class (:foreground ,green-intense :weight bold))))
   ;;;; diff-hl
   `(diff-hl-change ((,class (:inherit (modus-theme-intense-yellow)))))
   `(diff-hl-delete ((,class (:inherit (modus-theme-intense-red)))))
   `(diff-hl-dired-change ((,class (:inherit (diff-hl-change)))))
   `(diff-hl-dired-delete ((,class (:inherit (diff-hl-delete)))))
   `(diff-hl-dired-ignored ((,class (:inherit (dired-ignored)))))
   `(diff-hl-dired-insert ((,class (:inherit (diff-hl-insert)))))
   `(diff-hl-dired-unknown ((,class (:inherit (dired-ignored)))))
   `(diff-hl-insert ((,class (:inherit (modus-theme-intense-green)))))
   `(diff-hl-reverted-hunk-highlight ((,class (:inherit (modus-theme-intense-magenta)))))
   ;;;; diff-mode
   `(diff-added ((,class (:inherit (modus-theme-subtle-green)))))
   `(diff-changed ((,class (:inherit (modus-theme-subtle-yellow)))))
   `(diff-context ((,class (:background ,bg-dim :foreground ,fg-alt))))
   `(diff-file-header ((,class (:inherit (modus-theme-special-cold) :weight bold))))
   `(diff-function ((,class (:inherit (modus-theme-special-cold) :weight bold))))
   `(diff-header ((,class (:inherit (modus-theme-special-cold) :weight bold))))
   `(diff-hunk-header ((,class (:inherit (modus-theme-special-warm) :weight bold))))
   `(diff-index-header ((,class (:inherit (diff-function)))))
   `(diff-indicator-added ((,class (:inherit (diff-added)))))
   `(diff-indicator-changed ((,class (:inherit (diff-changed)))))
   `(diff-indicator-removed ((,class (:inherit (diff-removed)))))
   `(diff-nonexistent ((,class (:inherit (modus-theme-subtle-neutral)))))
   `(diff-refine-added ((,class (:inherit (modus-theme-intense-green)))))
   `(diff-refine-changed ((,class (:inherit (modus-theme-intense-yellow)))))
   `(diff-refine-removed ((,class (:inherit (modus-theme-intense-red)))))
   `(diff-removed ((,class (:inherit (modus-theme-subtle-red)))))
   ;;;; dired (and extensions)
   `(dgi-commit-message-face ((,class (:foreground ,fg-special-warm)))) ; dired-git-info
   `(dired-async-failures ((,class (:inherit (modus-theme-intense-red)))))
   `(dired-async-message ((,class (:inherit (modus-theme-intense-green)))))
   `(dired-async-mode-message ((,class (:inherit (modus-theme-intense-magenta)))))
   `(dired-directory ((,class (:foreground ,blue :weight bold))))
   `(dired-flagged ((,class (:inherit (modus-theme-intense-red)))))
   `(dired-header ((,class (:foreground ,fg-main :weight bold))))
   `(dired-marked ((,class (:inherit (modus-theme-intense-magenta)))))
   `(dired-narrow-blink ((,class (:inherit (modus-theme-subtle-cyan) :weight bold))))
   `(dired-subtree-depth-1-face ((,class (:background ,bg-dim))))
   `(dired-subtree-depth-2-face ((,class (:background ,bg-alt))))
   `(dired-subtree-depth-3-face ((,class (:background ,bg-main))))
   `(dired-subtree-depth-4-face ((,class (:background ,bg-dim))))
   `(dired-subtree-depth-5-face ((,class (:background ,bg-alt))))
   `(dired-subtree-depth-6-face ((,class (:background ,bg-main))))
   ;;;; diredfl
   `(diredfl-autofile-name ((,class (:inherit (modus-theme-refine-yellow)))))
   `(diredfl-compressed-file-name ((,class (:foreground ,red-alt :weight bold))))
   `(diredfl-compressed-file-suffix ((,class (:inherit (diredfl-compressed-file-name)))))
   `(diredfl-date-time ((,class (:foreground ,cyan))))
   `(diredfl-deletion ((,class (:inherit (dired-flagged)))))
   `(diredfl-deletion-file-name ((,class (:inherit (dired-flagged)))))
   `(diredfl-dir-heading ((,class (:inherit (dired-header)))))
   `(diredfl-dir-name ((,class (:inherit (dired-directory)))))
   `(diredfl-dir-priv ((,class (:foreground ,blue-alt))))
   `(diredfl-exec-priv ((,class (:foreground ,red-alt))))
   `(diredfl-executable-tag ((,class (:foreground ,red-alt))))
   `(diredfl-file-name ((,class (:foreground ,fg-main))))
   `(diredfl-file-suffix ((,class (:inherit (diredfl-file-name)))))
   `(diredfl-flag-mark ((,class (:inherit (dired-marked)))))
   `(diredfl-flag-mark-line ((,class (:inherit (dired-marked)))))
   `(diredfl-ignored-file-name ((,class (:foreground ,fg-alt))))
   `(diredfl-link-priv ((,class (:foreground ,cyan-alt))))
   `(diredfl-no-priv ((,class (:foreground ,fg-alt))))
   `(diredfl-number ((,class (:foreground ,cyan-alt-other))))
   `(diredfl-other-priv ((,class (:foreground ,yellow-alt))))
   `(diredfl-rare-priv ((,class (:foreground ,magenta-alt))))
   `(diredfl-read-priv ((,class (:foreground ,green-alt))))
   `(diredfl-symlink ((,class (:inherit (diredfl-link-priv)))))
   `(diredfl-tagged-autofile-name ((,class (:inherit (modus-theme-refine-magenta)))))
   `(diredfl-write-priv ((,class (:foreground ,cyan))))
   ;;;; elfeed
   `(elfeed-search-date-face ((,class (:inherit (default)))))
   `(elfeed-search-title-face ((,class (:inherit (default) :weight normal))))
   `(elfeed-search-unread-title-face ((,class (:inherit (default) :weight bold))))
   `(elfeed-search-feed-face ((,class (:foreground ,blue))))
   `(elfeed-search-tag-face ((,class (:foreground ,cyan))))
   `(elfeed-log-debug-level-face ((,class (:inherit (modus-theme-intense-magenta)))))
   `(elfeed-log-error-level-face ((,class (:inherit (modus-theme-intense-red)))))
   `(elfeed-log-warn-level-face ((,class (:inherit (modus-theme-subtle-yellow)))))
   `(elfeed-log-info-level-face ((,class (:inherit (modus-theme-subtle-cyan)))))
   ;;;; emms
   `(emms-playlist-track-face ((,class (:foreground ,blue))))
   `(emms-playlist-selected-face ((,class (:foreground ,magenta :weight bold))))
   ;;;; eshell
   `(eshell-ls-archive ((,class (:foreground ,cyan-alt :weight bold))))
   `(eshell-ls-backup ((,class (:foreground ,yellow-alt))))
   `(eshell-ls-clutter ((,class (:foreground ,red-alt))))
   `(eshell-ls-directory ((,class (:foreground ,blue-alt :weight bold))))
   `(eshell-ls-executable ((,class (:foreground ,magenta-alt))))
   `(eshell-ls-missing ((,class (:inherit (modus-theme-intense-red)))))
   `(eshell-ls-product ((,class (:foreground ,fg-special-warm))))
   `(eshell-ls-readonly ((,class (:foreground ,fg-special-cold))))
   `(eshell-ls-special ((,class (:foreground ,magenta :weight bold))))
   `(eshell-ls-symlink ((,class (:foreground ,cyan :underline t))))
   `(eshell-ls-unreadable ((,class (:background ,bg-inactive :foreground ,fg-inactive))))
   `(eshell-prompt ((,class (:foreground ,cyan-alt-other :weight bold))))
   ;;;; eww
   `(eww-invalid-certificate ((,class (:inherit (error)))))
   `(eww-valid-certificate ((,class (:inherit (success)))))
   `(eww-form-checkbox ((,class (:box (:line-width 1 :color ,fg-inactive :style released-button) :background ,bg-inactive :foreground ,fg-main))))
   `(eww-form-file ((,class (:box (:line-width 1 :color ,fg-inactive :style released-button) :background ,bg-active :foreground ,fg-main))))
   `(eww-form-select ((,class (:inherit (eww-form-checkbox)))))
   `(eww-form-submit ((,class (:inherit (eww-form-file)))))
   `(eww-form-text ((,class (:box (:line-width 1 :color ,fg-inactive :style none) :background ,bg-active :foreground ,fg-active))))
   `(eww-form-textarea ((,class (:background ,bg-alt :foreground ,fg-main))))
   ;;;; fancy-dabbrev
   `(fancy-dabbrev-menu-face ((,class (:background ,bg-alt :foreground ,fg-alt))))
   `(fancy-dabbrev-preview-face ((,class (:underline (:color foreground-color :style line) :foreground ,fg-alt))))
   `(fancy-dabbrev-selection-face ((,class (:inherit (modus-theme-intense-cyan) :weight bold))))
   ;;;; font lock
   `(font-lock-builtin-face ((,class (:foreground ,magenta-alt))))
   `(font-lock-comment-delimiter-face ((,class (:inherit (font-lock-comment-face)))))
   `(font-lock-comment-face ((,class (:foreground ,fg-alt))))
   `(font-lock-constant-face ((,class (:foreground ,blue-alt-other))))
   `(font-lock-doc-face ((,class (:foreground ,fg-special-cold))))
   `(font-lock-function-name-face ((,class (:foreground ,magenta :weight normal))))
   `(font-lock-keyword-face ((,class (:foreground ,magenta-alt-other))))
   `(font-lock-negation-char-face ((,class nil)))
   `(font-lock-preprocessor-face ((,class (:foreground ,magenta))))
   `(font-lock-regexp-grouping-backslash ((,class (:weight bold))))
   `(font-lock-regexp-grouping-construct ((,class (:weight bold))))
   `(font-lock-string-face ((,class (:foreground ,blue-alt))))
   `(font-lock-type-face ((,class (:foreground ,magenta-alt :weight normal))))
   `(font-lock-variable-name-face ((,class (:foreground ,cyan :weight normal))))
   `(font-lock-warning-face ((,class (:background ,bg-alt :foreground ,yellow-alt-other :weight bold))))
   ;;;; flycheck
   `(flycheck-error ((,class (:background ,bg-alt :foreground ,red :underline t))))
   `(flycheck-error-list-checker-name ((,class (:foreground ,magenta-alt))))
   `(flycheck-error-list-column-number ((,class (:foreground ,fg-special-cold))))
   `(flycheck-error-list-error ((,class (:inherit (error)))))
   `(flycheck-error-list-filename ((,class (:foreground ,blue))))
   `(flycheck-error-list-highlight ((,class (:inherit (highlight)))))
   `(flycheck-error-list-id ((,class (:foreground ,magenta-alt-other))))
   `(flycheck-error-list-id-with-explainer ((,class (:box (:line-width 1 :color foreground-color) :inherit (flycheck-error-list-id)))))
   `(flycheck-error-list-info ((,class (:background ,bg-alt :foreground ,green))))
   `(flycheck-error-list-line-number ((,class (:foreground ,fg-special-cold))))
   `(flycheck-error-list-warming ((,class (:bakground ,bg-alt :foreground ,yellow))))
   `(flycheck-fringe-error ((,class (:foreground ,red-intense :weight bold))))
   `(flycheck-fringe-info ((,class (:foreground ,green-intense :weight bold))))
   `(flycheck-fringe-warning ((,class (:foreground ,yellow-intense :weight bold))))
   `(flycheck-info ((,class (:background ,bg-alt :foreground ,green :underline t))))
   `(flycheck-verify-select-checker ((,class (:box (:line-width 1 :color nil :style released-button)))))
   `(flycheck-warning ((,class (:background ,bg-alt :foreground ,yellow :underline t))))
   ;;;; flyspell
   `(flyspell-duplicate ((,class (:inherit (modus-theme-refine-yellow) :underline (:style wave)))))
   `(flyspell-incorrect ((,class (:inherit (modus-theme-refine-red) :underline (:style wave)))))
   ;;;; git and magit
   `(git-commit-overlong-summary ((,class (:inherit (modus-theme-subtle-yellow)))))
   `(magit-bisect-bad ((,class (:foreground ,red-alt-other))))
   `(magit-bisect-good ((,class (:foreground ,green-alt-other))))
   `(magit-bisect-skip ((,class (:foreground ,yellow-alt-other))))
   `(magit-branch-current ((,class (:inherit (font-lock-type-face)))))
   `(magit-branch-local ((,class (:inherit (font-lock-builtin-face)))))
   `(magit-branch-remote ((,class (:inherit (font-lock-function-name-face)))))
   `(magit-cherry-equivalent ((,class (:background ,bg-main :foreground ,magenta-intense))))
   `(magit-cherry-unmatched ((,class (:background ,bg-main :foreground ,cyan-intense))))
   `(magit-diff-added ((,class (:inherit (modus-theme-subtle-green)))))
   `(magit-diff-added-highlight ((,class (:inherit (modus-theme-refine-green)))))
   `(magit-diff-base ((,class (:inherit (modus-theme-subtle-yellow)))))
   `(magit-diff-base-highlight ((,class (:inherit (modus-theme-refine-yellow)))))
   `(magit-diff-changed ((,class (:weight bold))))
   `(magit-diff-changed-highlight ((,class (:weight bold))))
   `(magit-diff-context ((,class (:background ,bg-main :foreground ,fg-alt))))
   `(magit-diff-context-highlight ((,class (:background ,bg-alt :foreground ,fg-alt))))
   `(magit-diff-file-heading ((,class (:background ,bg-main :foreground ,fg-special-cold :weight bold))))
   `(magit-diff-file-heading-highlight ((,class (:inherit (modus-theme-special-cold) :weight bold))))
   `(magit-diff-file-heading-selection ((,class (:background ,bg-alt :foreground ,cyan))))
   `(magit-diff-hunk-heading ((,class (:background ,bg-main :foreground ,fg-special-warm :weight bold))))
   `(magit-diff-hunk-heading-highlight ((,class (:inherit (modus-theme-special-cold) :weight bold))))
   `(magit-diff-hunk-heading-selection ((,class (:inherit (magit-diff-file-heading-selection)))))
   `(magit-diff-hunk-region ((,class (:weight bold)))) ; has no effect?
   `(magit-diff-lines-boundary ((,class (:background ,fg-main))))
   `(magit-diff-lines-heading ((,class (:inherit (modus-theme-refine-magenta)))))
   `(magit-diff-removed ((,class (:inherit (modus-theme-subtle-red)))))
   `(magit-diff-removed-highlight ((,class (:inherit (modus-theme-refine-red)))))
   `(magit-diffstat-added ((,class (:background ,bg-main :foreground ,green))))
   `(magit-diffstat-removed ((,class (:background ,bg-main :foreground ,red))))
   `(magit-dimmed ((,class (:foreground ,fg-alt))))
   `(magit-filename ((,class (:foreground ,fg-special-cold))))
   `(magit-hash ((,class (:foreground ,fg-special-warm))))
   `(magit-log-author ((,class (:foreground ,fg-special-mild))))
   `(magit-log-date ((,class (:foreground ,fg-dim))))
   `(magit-log-graph ((,class (:foreground ,fg-dim))))
   `(magit-process-ng ((,class (:inherit (error)))))
   `(magit-process-ok ((,class (:inherit (success)))))
   `(magit-reflog-amend ((,class (:background ,bg-main :foreground ,magenta-intense))))
   `(magit-reflog-checkout ((,class (:background ,bg-main :foreground ,blue-intense))))
   `(magit-reflog-cherry-pick ((,class (:background ,bg-main :foreground ,green-intense))))
   `(magit-reflog-commit ((,class (:background ,bg-main :foreground ,green-intense))))
   `(magit-reflog-merge ((,class (:background ,bg-main :foreground ,green-intense))))
   `(magit-reflog-other ((,class (:background ,bg-main :foreground ,cyan-intense))))
   `(magit-reflog-rebase ((,class (:background ,bg-main :foreground ,magenta-intense))))
   `(magit-reflog-remote ((,class (:background ,bg-main :foreground ,cyan-intense))))
   `(magit-reflog-reset ((,class (:background ,bg-main :foreground ,red-intense))))
   `(magit-refname ((,class (:foreground ,fg-alt))))
   `(magit-refname-pullreq ((,class (:foreground ,fg-alt))))
   `(magit-refname-stash ((,class (:foreground ,fg-alt))))
   `(magit-refname-wip ((,class (:foreground ,fg-alt))))
   `(magit-section ((,class (:background ,bg-dim :foreground ,fg-main))))
   `(magit-section-heading ((,class (:foreground ,cyan :weight normal))))
   `(magit-section-heading-selection ((,class (:inherit (modus-theme-refine-cyan) :weight bold))))
   `(magit-section-highlight ((,class (:background ,bg-alt))))
   `(magit-sequence-done ((,class (:foreground ,green-alt))))
   `(magit-sequence-drop ((,class (:foreground ,red-alt))))
   `(magit-sequence-exec ((,class (:foreground ,magenta-alt))))
   `(magit-sequence-head ((,class (:foreground ,cyan-alt))))
   `(magit-sequence-onto ((,class (:foreground ,fg-alt))))
   `(magit-sequence-part ((,class (:foreground ,yellow-alt))))
   `(magit-sequence-pick ((,class (:foreground ,blue-alt))))
   `(magit-sequence-stop ((,class (:foreground ,red))))
   `(magit-signature-bad ((,class (:background ,bg-main :foreground ,red-intense :weight bold))))
   `(magit-signature-error ((,class (:background ,bg-main :foreground ,red-intense))))
   `(magit-signature-expired ((,class (:background ,bg-main :foreground ,yellow-intense))))
   `(magit-signature-expired-key ((,class (:background ,bg-main :foreground ,yellow-intense))))
   `(magit-signature-good ((,class (:background ,bg-main :foreground ,green-intense))))
   `(magit-signature-revoked ((,class (:background ,bg-main :foreground ,magenta-intense))))
   `(magit-signature-untrusted ((,class (:background ,bg-main :foreground ,cyan-intense))))
   `(magit-tag ((,class (:foreground ,yellow-alt-other))))
   ;;;; gnus
   `(gnus-button ((,class (:inherit (button)))))
   `(gnus-cite-1 ((,class (:foreground ,blue-alt))))
   `(gnus-cite-10 ((,class (:foreground ,magenta-alt-other))))
   `(gnus-cite-11 ((,class (:foreground ,yellow-alt-other))))
   `(gnus-cite-2 ((,class (:foreground ,red-alt))))
   `(gnus-cite-3 ((,class (:foreground ,green-alt))))
   `(gnus-cite-4 ((,class (:foreground ,magenta-alt))))
   `(gnus-cite-5 ((,class (:foreground ,yellow-alt))))
   `(gnus-cite-6 ((,class (:foreground ,cyan-alt))))
   `(gnus-cite-7 ((,class (:foreground ,blue-alt-other))))
   `(gnus-cite-8 ((,class (:foreground ,red-alt-other))))
   `(gnus-cite-9 ((,class (:foreground ,green-alt-other))))
   `(gnus-cite-attribution ((,class (:foreground ,fg-main :slant italic))))
   `(gnus-emphasis-highlight-words ((,class (:inherit (modus-theme-intense-yellow)))))
   `(gnus-group-mail-1 ((,class (:foreground ,magenta :weight bold))))
   `(gnus-group-mail-1-empty ((,class (:foreground ,magenta))))
   `(gnus-group-mail-2 ((,class (:foreground ,magenta-alt :weight bold))))
   `(gnus-group-mail-2-empty ((,class (:foreground ,magenta-alt))))
   `(gnus-group-mail-3 ((,class (:foreground ,magenta-alt-other :weight bold))))
   `(gnus-group-mail-3-empty ((,class (:foreground ,magenta-alt-other))))
   `(gnus-group-mail-low ((,class (:foreground ,fg-alt :weight bold))))
   `(gnus-group-mail-low-empty ((,class (:foreground ,fg-alt))))
   `(gnus-group-news-1 ((,class (:foreground ,cyan :weight bold))))
   `(gnus-group-news-1-empty ((,class (:foreground ,cyan))))
   `(gnus-group-news-2 ((,class (:foreground ,cyan-alt :weight bold))))
   `(gnus-group-news-2-empty ((,class (:foreground ,cyan-alt))))
   `(gnus-group-news-3 ((,class (:foreground ,cyan-alt-other :weight bold))))
   `(gnus-group-news-3-empty ((,class (:foreground ,cyan-alt-other))))
   `(gnus-group-news-4 ((,class (:foreground ,green :weight bold))))
   `(gnus-group-news-4-empty ((,class (:foreground ,green))))
   `(gnus-group-news-5 ((,class (:foreground ,green-alt :weight bold))))
   `(gnus-group-news-5-empty ((,class (:foreground ,green-alt))))
   `(gnus-group-news-6 ((,class (:foreground ,green-alt-other :weight bold))))
   `(gnus-group-news-6-empty ((,class (:foreground ,green-alt-other))))
   `(gnus-group-news-low ((,class (:foreground ,fg-alt :weight bold))))
   `(gnus-group-news-low-empty ((,class (:foreground ,fg-alt))))
   `(gnus-header-content ((,class (:foreground ,fg-main))))
   `(gnus-header-from ((,class (:foreground ,fg-main))))
   `(gnus-header-name ((,class (:foreground ,fg-dim :weight bold))))
   `(gnus-header-newsgroup ((,class (:foreground ,blue))))
   `(gnus-header-subject ((,class (:foreground ,fg-main))))
   `(gnus-server-agent ((,class (:foreground ,cyan :weight bold))))
   `(gnus-server-closed ((,class (:foreground ,magenta))))
   `(gnus-server-cloud ((,class (:foreground ,cyan-alt :weight bold))))
   `(gnus-server-cloud-host ((,class (:background ,cyan-alt :foreground ,bg-main))))
   `(gnus-server-denied ((,class (:foreground ,red :weight bold))))
   `(gnus-server-offline ((,class (:foreground ,yellow :weight bold))))
   `(gnus-server-opened ((,class (:foreground ,green :weight bold))))
   `(gnus-signature ((,class (:foreground ,yellow-alt-other :slant italic))))
   `(gnus-splash ((,class (:foreground ,fg-alt))))
   `(gnus-summary-cancelled ((,class (:inherit (modus-theme-intense-yellow)))))
   `(gnus-summary-high-ancient ((,class (:foreground ,fg-alt :weight bold))))
   `(gnus-summary-high-read ((,class (:foreground ,fg-dim :weight bold))))
   `(gnus-summary-high-ticked ((,class (:foreground ,red-alt :weight bold))))
   `(gnus-summary-high-undownloaded ((,class (:foreground ,yellow :weight bold))))
   `(gnus-summary-high-unread ((,class (:foreground ,fg-main :weight bold))))
   `(gnus-summary-low-ancient ((,class (:foreground ,fg-alt :slant italic))))
   `(gnus-summary-low-read ((,class (:foreground ,fg-dim :slant italic))))
   `(gnus-summary-low-ticked ((,class (:foreground ,red-alt :slant italic))))
   `(gnus-summary-low-undownloaded ((,class (:foreground ,yellow :slant italic))))
   `(gnus-summary-low-unread ((,class (:foreground ,fg-main :slant italic))))
   `(gnus-summary-normal-ancient ((,class (:foreground ,fg-alt))))
   `(gnus-summary-normal-read ((,class (:foreground ,fg-dim))))
   `(gnus-summary-normal-ticked ((,class (:foreground ,red-alt))))
   `(gnus-summary-normal-undownloaded ((,class (:foreground ,yellow))))
   `(gnus-summary-normal-unread ((,class (:foreground ,fg-main))))
   `(gnus-summary-selected ((,class (:inherit (modus-theme-subtle-cyan)))))
   ;;;; helm
   `(helm-M-x-key ((,class (:foreground ,red-alt-other :underline t))))
   `(helm-action ((,class (:underline t))))
   `(helm-bookmark-addressbook ((,class (:foreground ,green-alt))))
   `(helm-bookmark-directory ((,class (:foreground ,blue :weight bold))))
   `(helm-bookmark-file ((,class (:foreground ,fg-main))))
   `(helm-bookmark-file-not-found ((,class (:background ,bg-alt :foreground ,fg-alt))))
   `(helm-bookmark-gnus ((,class (:foreground ,magenta))))
   `(helm-bookmark-info ((,class (:foreground ,cyan-alt))))
   `(helm-bookmark-man ((,class (:foreground ,yellow-alt))))
   `(helm-bookmark-w3m ((,class (:foreground ,blue-alt))))
   `(helm-buffer-archive ((,class (:foreground ,cyan :weight bold))))
   `(helm-buffer-directory ((,class (:foreground ,blue :weight bold))))
   `(helm-buffer-file ((,class (:foreground ,fg-main))))
   `(helm-buffer-modified ((,class (:foreground ,yellow-alt))))
   `(helm-buffer-not-saved ((,class (:foreground ,red-alt))))
   `(helm-buffer-process ((,class (:foreground ,magenta))))
   `(helm-buffer-saved-out ((,class (:background ,bg-alt :foreground ,red :weight bold))))
   `(helm-buffer-size ((,class (:foreground ,fg-alt))))
   `(helm-candidate-number ((,class (:background ,bg-alt :foreground ,cyan))))
   `(helm-candidate-number-suspended ((,class (:inherit (modus-theme-intense-yellow)))))
   `(helm-delete-async-message ((,class (:inherit (modus-theme-intense-magenta)))))
   `(helm-eob-line ((,class (:inherit (default)))))
   `(helm-etags-file ((,class (:foreground ,fg-dim :underline t))))
   `(helm-ff-denied ((,class (:inherit (modus-theme-intense-red)))))
   `(helm-ff-directory ((,class (:inherit (helm-buffer-directory)))))
   `(helm-ff-dirs ((,class (:foreground ,blue-alt-other :weight bold))))
   `(helm-ff-dotted-directory ((,class (:background ,bg-alt :foreground ,fg-alt :weight bold))))
   `(helm-ff-dotted-symlink-directory ((,class (:inherit (helm-ff-dotted-directory) :underline t))))
   `(helm-ff-executable ((,class (:foreground ,magenta-alt))))
   `(helm-ff-file ((,class (:foreground ,fg-main))))
   `(helm-ff-invalid-symlink ((,class (:foreground ,red :underline t))))
   `(helm-ff-pipe ((,class (:inherit (modus-theme-subtle-magenta)))))
   `(helm-ff-prefix ((,class (:inherit (modus-theme-subtle-yellow)))))
   `(helm-ff-socket ((,class (:foreground ,red-alt-other))))
   `(helm-ff-suid ((,class (:inherit (modus-theme-refine-red)))))
   `(helm-ff-symlink ((,class (:foreground ,cyan :underline t))))
   `(helm-ff-truename ((,class (:foreground ,blue-alt-other))))
   `(helm-grep-cmd-line ((,class (:foreground ,yellow-alt-other))))
   `(helm-grep-file ((,class (:foreground ,cyan-alt :weight bold))))
   `(helm-grep-finish ((,class (:foreground ,green))))
   `(helm-grep-lineno ((,class (:inherit (modus-theme-special-cold)))))
   `(helm-grep-match ((,class (:inherit (modus-theme-subtle-blue)))))
   `(helm-header ((,class (:background ,bg-alt :foreground ,fg-main :weight bold))))
   `(helm-header-line-left-margin ((,class (:background ,bg-main :foreground ,yellow-intense :weight bold))))
   `(helm-history-deleted ((,class (:inherit (modus-theme-intense-red) :weight bold))))
   `(helm-history-remote ((,class (:foreground ,red-alt-other))))
   `(helm-lisp-completion-info ((,class (:foreground ,fg-special-warm))))
   `(helm-lisp-show-completion ((,class (:inherit (modus-theme-refine-yellow)))))
   `(helm-locate-finish ((,class (:foreground ,green))))
   `(helm-match ((,class (:inherit (modus-theme-subtle-blue)))))
   `(helm-match-item ((,class (:inherit (modus-theme-intense-blue)))))
   `(helm-minibuffer-prompt ((,class (:inherit (minibuffer-prompt)))))
   `(helm-moccur-buffer ((,class (:foreground ,cyan-alt-other :underline t))))
   `(helm-non-file-buffer ((,class (:foreground ,fg-alt))))
   `(helm-prefarg ((,class (:foreground ,red-alt))))
   `(helm-resume-need-update ((,class (:inherit (modus-theme-intense-red)))))
   `(helm-selection ((,class (:inherit (modus-theme-intense-green) :weight bold))))
   `(helm-separator ((,class (:foreground ,fg-special-mild))))
   `(helm-source-header ((,class (:inherit (modus-theme-special-cold) :weight bold))))
   `(helm-top-columns ((,class (:inherit (helm-header)))))
   `(helm-visible-mark ((,class (:inherit (modus-theme-subtle-cyan)))))
   ;;;; highlight region or ad-hoc regexp
   `(hi-black-b ((,class ((:background ,fg-main :foreground ,bg-main)))))
   `(hi-blue ((,class (:background ,bg-alt :underline (:color foreground-color :style line) :foreground ,blue))))
   `(hi-blue-b ((,class (:inherit (modus-theme-intense-blue)))))
   `(hi-green ((,class (:background ,bg-alt :underline (:color foreground-color :style line) :foreground ,green))))
   `(hi-green-b ((,class (:inherit (modus-theme-intense-green)))))
   `(hi-pink ((,class (:background ,bg-alt :underline (:color foreground-color :style line) :foreground ,magenta))))
   `(hi-red-b ((,class (:inherit (modus-theme-intense-red)))))
   `(hi-yellow ((,class (:background ,bg-alt :underline (:color foreground-color :style line) :foreground ,yellow))))
   `(highlight ((,class (:inherit (modus-theme-subtle-blue)))))
   `(highlight-changes ((,class (:foreground ,yellow-alt-other))))
   `(highlight-changes-delete ((,class (:foreground ,red-alt-other :underline t))))
   `(hl-line ((,class (:background ,bg-alt))))
   `(region ((,class (:background ,bg-active :foreground ,fg-active))))
   `(secondary-selection ((,class (:background ,bg-inactive :foreground ,fg-inactive))))
   ;;;; ido-mode
   `(flx-highlight-face ((,class (:inherit (modus-theme-intense-magenta)))))
   `(ido-first-match ((,class (:foreground ,magenta :weight bold))))
   `(ido-incomplete-regexp ((,class (:inherit (error)))))
   `(ido-indicator ((,class (:inherit (modus-theme-subtle-yellow)))))
   `(ido-only-match ((,class (:foreground ,magenta-intense :weight bold))))
   `(ido-subdir ((,class (:foreground ,blue-alt-other))))
   `(ido-virtual ((,class (:foreground ,yellow-alt-other))))
   ;;;; isearch, occur, and the like
   `(isearch ((,class (:inherit (modus-theme-intense-green) :weight bold))))
   `(isearch-fail ((,class (:inherit (modus-theme-subtle-red)))))
   `(lazy-highlight ((,class (:inherit (modus-theme-subtle-green)))))
   `(match ((,class (:inherit (modus-theme-intense-blue)))))
   `(query-replace ((,class (:inherit (isearch)))))
   ;;;; info pages (help pages)
   `(info-header-node ((,class ((:weight bold)))))
   `(info-menu-star ((,class (:inherit default))))
   `(info-node ((,class ((:weight bold)))))
   ;;;; ivy
   `(ivy-confirm-face ((,class (:inherit (font-lock-variable-name-face)))))
   `(ivy-current-match ((,class (:inherit (modus-theme-intense-green) :weight bold))))
   `(ivy-cursor ((,class (:inherit (cursor)))))
   `(ivy-grep-info ((,class (:inherit (modus-theme-intense-green)))))
   `(ivy-grep-line-number ((,class (:inherit (line-number)))))
   `(ivy-match-required-face ((,class (:inherit (error)))))
   `(ivy-minibuffer-match-face-1 ((,class (:inherit (modus-theme-subtle-neutral)))))
   `(ivy-minibuffer-match-face-2 ((,class (:inherit (modus-theme-subtle-green)))))
   `(ivy-minibuffer-match-face-3 ((,class (:inherit (modus-theme-subtle-magenta)))))
   `(ivy-minibuffer-match-face-4 ((,class (:inherit (modus-theme-subtle-yellow)))))
   `(ivy-org ((,class (:inherit (default)))))
   `(ivy-remote ((,class (:inherit (font-lock-function-name-face)))))
   ;;;; line numbers (display-line-numbers-mode and global variant)
   `(line-number ((,class (:background ,bg-alt :foreground ,fg-alt))))
   `(line-number-current-line ((,class (:background ,bg-active :foreground ,fg-active :weight bold))))
   ;;;; markdown format
   `(markdown-blockquote-face ((,class (:background ,bg-alt))))
   `(markdown-header-face ((,class (:weight bold))))
   `(markdown-inline-code-face ((,class (:background ,bg-dim :foreground ,magenta-alt))))
   `(markdown-pre-face ((,class (:inherit (markdown-inline-code-face)))))
   ;;;; matching parentheses
   `(show-paren-match ((,class (:inherit (modus-theme-intense-magenta) :weight bold))))
   `(show-paren-match-expression ((,class (:inherit (modus-theme-special-mild)))))
   `(show-paren-mismatch ((,class (:inherit (modus-theme-intense-red)))))
   ;;;; messages
   `(message-cited-text ((,class (:foreground ,red-alt))))
   `(message-header-cc ((,class (:foreground ,green-alt :weight bold))))
   `(message-header-name ((,class (:foreground ,fg-dim :weight bold))))
   `(message-header-newsgroups ((,class (:foreground ,yellow-alt :weight bold))))
   `(message-header-other ((,class (:foreground ,green-alt :weight bold))))
   `(message-header-subject ((,class (:foreground ,green-alt :weight bold))))
   `(message-header-to ((,class (:foreground ,green-alt :weight bold))))
   `(message-header-xheader ((,class (:foreground ,yellow-alt :weight bold))))
   `(message-mml ((,class (:foreground ,cyan))))
   `(message-separator ((,class (:background ,bg-alt :foreground ,fg-alt))))
   ;;;; modeline
   `(mode-line ((,class (:box (:line-width 1 :color ,fg-inactive) :background ,bg-active :foreground ,fg-active))))
   `(mode-line-buffer-id ((,class (:weight bold))))
   `(mode-line-emphasis ((,class (:background ,bg-main :foreground ,blue-intense :weight bold))))
   `(mode-line-highlight ((,class (:box (:line-width 1 :color ,fg-main) :inherit (modus-theme-intense-blue)))))
   `(mode-line-inactive ((,class (:box (:line-width 1 :color ,bg-inactive) :background ,bg-inactive :foreground ,fg-inactive))))
   `(which-func ((,class (:foreground ,fg-main))))
   ;;;; mu4e
   `(mu4e-attach-number-face ((,class (:foreground ,cyan-alt :weight bold))))
   `(mu4e-cited-1-face ((,class (:foreground ,blue-alt))))
   `(mu4e-cited-2-face ((,class (:foreground ,red-alt))))
   `(mu4e-cited-3-face ((,class (:foreground ,green-alt))))
   `(mu4e-cited-4-face ((,class (:foreground ,magenta-alt))))
   `(mu4e-cited-5-face ((,class (:foreground ,cyan-alt))))
   `(mu4e-cited-6-face ((,class (:foreground ,blue-alt-other))))
   `(mu4e-cited-7-face ((,class (:foreground ,red-alt-other))))
   `(mu4e-compose-header-face ((,class (:foreground ,green-alt))))
   `(mu4e-compose-separator-face ((,class (:inherit (mode-line)))))
   `(mu4e-contact-face ((,class (:foreground ,cyan))))
   `(mu4e-context-face ((,class (:background ,bg-alt :foreground ,fg-alt :weight bold))))
   `(mu4e-draft-face ((,class (:background ,bg-main :foreground ,magenta-refine-fg))))
   `(mu4e-flagged-face ((,class (:foreground ,red-alt-other))))
   `(mu4e-footer-face ((,class (:foreground ,fg-alt))))
   `(mu4e-forwarded-face ((,class (:foreground ,green-alt-other))))
   `(mu4e-header-face ((,class (:foreground ,fg-main))))
   `(mu4e-header-highlight-face ((,class (:inherit (hl-line)))))
   `(mu4e-header-key-face ((,class (:foreground ,fg-dim :weight bold))))
   `(mu4e-header-marks-face ((,class (:foreground ,fg-special-warm))))
   `(mu4e-header-title-face ((,class (:foreground ,fg-special-warm))))
   `(mu4e-header-value-face ((,class (:foreground ,fg-special-warm))))
   `(mu4e-highlight-face ((,class (:background ,bg-main :foreground ,blue-intense :weight bold))))
   `(mu4e-link-face ((,class (:inherit (link)))))
   `(mu4e-modeline-face ((,class (:background ,bg-alt :foreground ,fg-alt :weight bold))))
   `(mu4e-moved-face ((,class (:background ,bg-main :foreground ,blue-refine-fg))))
   `(mu4e-ok-face ((,class (:foreground ,green-intense :weight bold))))
   `(mu4e-region-code ((,class (:inherit (show-paren-match-expression)))))
   `(mu4e-replied-face ((,class (:background ,bg-main :foreground ,cyan-refine-fg))))
   `(mu4e-special-header-value-face ((,class (:foreground ,magenta :weight bold))))
   `(mu4e-system-face ((,class (:background ,bg-main :foreground ,fg-alt))))
   `(mu4e-title-face ((,class (:foreground ,fg-main :weight normal))))
   `(mu4e-unread-face ((,class (:foreground ,fg-main :weight bold))))
   `(mu4e-url-number-face ((,class (:foreground ,blue-alt-other :weight bold))))
   `(mu4e-view-body-face ((,class (:inherit (default)))))
   `(mu4e-warning-face ((,class (:inherit (warning)))))
   ;;;; org-mode
   `(org-agenda-calendar-event ((,class (:inherit (default)))))
   `(org-agenda-calendar-sexp ((,class (:inherit (default)))))
   `(org-agenda-calendar-clocking ((,class (:inherit (modus-theme-special-cold)))))
   `(org-agenda-column-dateline ((,class (:inherit (modus-theme-subtle-neutral)))))
   `(org-agenda-current-time ((,class (:inherit (modus-theme-refine-cyan)))))
   `(org-agenda-date ((,class (:foreground ,fg-main))))
   `(org-agenda-date-today ((,class (:inherit (modus-theme-refine-cyan)))))
   `(org-agenda-date-weekend ((,class (:inherit (modus-theme-special-warm)))))
   `(org-agenda-diary ((,class (:inherit (default)))))
   `(org-agenda-dimmed-todo-face ((,class (:inherit modus-theme-subtle-neutral))))
   `(org-agenda-done ((,class (:foreground ,green))))
   `(org-agenda-filter-category ((,class (:inherit (mode-line)))))
   `(org-agenda-filter-effort ((,class (:inherit (mode-line)))))
   `(org-agenda-filter-regexp ((,class (:inherit (mode-line)))))
   `(org-agenda-filter-tags ((,class (:inherit (mode-line)))))
   `(org-agenda-restriction-lock ((,class (:background ,bg-dim :foreground ,fg-dim))))
   `(org-agenda-structure ((,class (:foreground ,fg-alt))))
   `(org-archived ((,class (:background ,bg-alt :foreground ,fg-alt))))
   `(org-block ((,class (:background ,bg-main :foreground ,fg-main))))
   `(org-block-begin-line ((,class (:background ,bg-dim :foreground ,fg-alt))))
   `(org-block-end-line ((,class (:inherit (org-block-begin-line)))))
   `(org-checkbox ((,class (:weight bold))))
   `(org-checkbox-statistics-done ((,class (:foreground ,green :weight bold))))
   `(org-checkbox-statistics-todo ((,class (:foreground ,yellow :weight bold))))
   `(org-clock-overlay ((,class (:inherit (modus-theme-special-cold)))))
   `(org-code ((,class (:foreground ,magenta))))
   `(org-column ((,class (:background ,bg-alt :weight normal))))
   `(org-column-title ((,class (:underline t :background ,bg-alt :weight bold))))
   `(org-date ((,class (:foreground ,cyan))))
   `(org-date-selected ((,class (:inherit (modus-theme-intense-cyan)))))
   `(org-default ((,class (:inherit (default)))))
   `(org-document-info ((,class (:foreground ,fg-special-cold))))
   `(org-document-title ((,class (:foreground ,fg-special-cold :weight bold))))
   `(org-done ((,class (:background ,bg-alt :foreground ,green))))
   `(org-drawer ((,class (:foreground ,cyan-alt))))
   `(org-ellipsis ((,class (:foreground ,yellow-alt :underline t))))
   `(org-footnote ((,class (:foreground ,blue-alt :underline t))))
   `(org-formula ((,class (:foreground ,red-alt))))
   `(org-headline-done ((,class (:foreground ,green-refine-fg))))
   `(org-hide ((,class (:foreground ,fg-main))))
   `(org-latex-and-related ((,class (:foreground ,magenta-refine-fg))))
   `(org-level-1 ((,class (:foreground ,fg-main :weight bold))))
   `(org-level-2 ((,class (:foreground ,fg-special-warm :weight bold))))
   `(org-level-3 ((,class (:foreground ,fg-special-cold :weight bold))))
   `(org-level-4 ((,class (:foreground ,fg-alt :weight bold))))
   `(org-level-5 ((,class (:foreground ,fg-dim :weight bold))))
   `(org-level-6 ((,class (:foreground ,cyan-alt-other :weight normal))))
   `(org-level-7 ((,class (:foreground ,green-alt-other :weight normal))))
   `(org-level-8 ((,class (:foreground ,yellow-alt-other :weight normal))))
   `(org-link ((,class (:inherit (link)))))
   `(org-list-dt ((,class (:foreground ,fg-dim :weight bold))))
   `(org-macro ((,class (:inherit (org-latex-and-related)))))
   `(org-meta-line ((,class (:inherit (font-lock-comment-face)))))
   `(org-mode-line-clock ((,class (:background ,bg-main :foreground ,fg-main))))
   `(org-mode-line-clock-overrun ((,class (:inherit (modus-theme-intense-red)))))
   `(org-priority ((,class (:foreground ,magenta-alt-other))))
   `(org-quote ((,class (:inherit (org-block) :foreground ,fg-special-cold))))
   `(org-scheduled ((,class (:foreground ,cyan-alt-other))))
   `(org-scheduled-previously ((,class (:foreground ,red-alt-other))))
   `(org-scheduled-today ((,class (:foreground ,blue-alt-other :weight bold))))
   `(org-sexp-date ((,class (:inherit (org-date)))))
   `(org-special-keyword ((,class (:background ,bg-main :foreground ,magenta-intense))))
   `(org-table ((,class (:foreground ,fg-special-cold))))
   `(org-tag ((,class (:foreground ,fg-special-warm :weight bold))))
   `(org-tag-group ((,class (:inherit (org-tag)))))
   `(org-target ((,class (:underline (:color foreground-color :style line)))))
   `(org-time-grid ((,class (:foreground ,yellow-alt-other))))
   `(org-todo ((,class (:background ,bg-alt :foreground ,yellow))))
   `(org-upcoming-deadline ((,class (:foreground ,red-alt-other))))
   `(org-verbatim ((,class (:background ,bg-dim :foreground ,fg-special-warm))))
   `(org-verse ((,class (:inherit (org-quote)))))
   `(org-warning ((,class (:inherit (modus-theme-intense-red) :weight bold))))
   ;;;; outline-mode
   `(outline-1 ((,class (:inherit (org-level-1)))))
   `(outline-2 ((,class (:inherit (org-level-2)))))
   `(outline-3 ((,class (:inherit (org-level-3)))))
   `(outline-4 ((,class (:inherit (org-level-4)))))
   `(outline-5 ((,class (:inherit (org-level-5)))))
   `(outline-6 ((,class (:inherit (org-level-6)))))
   `(outline-7 ((,class (:inherit (org-level-7)))))
   `(outline-8 ((,class (:inherit (org-level-8)))))
   ;;;; pass
   `(pass-mode-directory-face ((,class (:foreground ,fg-special-cold :weight bold))))
   `(pass-mode-entry-face ((,class (:inherit (default)))))
   `(pass-mode-header-face ((,class (:foreground ,fg-special-warm))))
   ;;;; rainbow-delimiters
   `(rainbow-delimiters-base-face ((,class (:foreground ,fg-main))))
   `(rainbow-delimiters-depth-1-face ((,class (:foreground ,green-alt-other))))
   `(rainbow-delimiters-depth-2-face ((,class (:foreground ,magenta-alt-other))))
   `(rainbow-delimiters-depth-3-face ((,class (:foreground ,cyan-alt-other))))
   `(rainbow-delimiters-depth-4-face ((,class (:foreground ,yellow-alt-other))))
   `(rainbow-delimiters-depth-5-face ((,class (:foreground ,blue-alt-other))))
   `(rainbow-delimiters-depth-6-face ((,class (:foreground ,green-alt))))
   `(rainbow-delimiters-depth-7-face ((,class (:foreground ,magenta-alt))))
   `(rainbow-delimiters-depth-8-face ((,class (:foreground ,cyan-alt))))
   `(rainbow-delimiters-depth-9-face ((,class (:foreground ,yellow-alt))))
   `(rainbow-delimiters-mismatched-face ((,class (:foreground ,red-alt :weight bold))))
   `(rainbow-delimiters-unmatched-face ((,class (:foreground ,red :weight bold))))
   ;;;; smerge
   `(smerge-base ((,class (:inherit (modus-theme-special-warm)))))
   `(smerge-lower ((,class (:inherit (modus-theme-subtle-green)))))
   `(smerge-markers ((,class (:inherit (modus-theme-special-cold)))))
   `(smerge-refined-added ((,class (:inherit (modus-theme-intense-green)))))
   `(smerge-refined-changed ((,class (:inherit (modus-theme-intense-yellow)))))
   `(smerge-refined-removed ((,class (:inherit (modus-theme-intense-red)))))
   `(smerge-refined-upper ((,class (:inherit (modus-theme-intense-red)))))
   `(smerge-upper ((,class (:inherit (modus-theme-subtle-red)))))
   ;;;; shell scripts
   `(sh-heredoc ((,class (:inherit (font-lock-string-face)))))
   `(sh-quoted-exec ((,class (:inherit (font-lock-builtin-face)))))
   ;;;; speedbar
   `(speedbar-button-face ((,class (:inherit (link)))))
   `(speedbar-directory-face ((,class (:inherit (dired-directory)))))
   `(speedbar-file-face ((,class (:inherit (default)))))
   `(speedbar-highlight-face ((,class (:inherit (highlight)))))
   `(speedbar-selected-face ((,class (:foreground ,cyan :weight bold))))
   `(speedbar-separator-face ((,class (:inherit (modus-theme-intense-neutral)))))
   `(speedbar-tag-face ((,class (:foreground ,yellow-alt-other))))
   ;;;; swiper
   `(swiper-background-match-face-1 ((,class (:inherit (modus-theme-subtle-neutral)))))
   `(swiper-background-match-face-2 ((,class (:inherit (modus-theme-subtle-magenta)))))
   `(swiper-background-match-face-3 ((,class (:inherit (modus-theme-subtle-yellow)))))
   `(swiper-background-match-face-4 ((,class (:inherit (modus-theme-subtle-green)))))
   `(swiper-line-face ((,class (:inherit (ivy-current-match)))))
   `(swiper-match-face-1 ((,class (:inherit (modus-theme-intense-neutral)))))
   `(swiper-match-face-2 ((,class (:inherit (modus-theme-intense-magenta)))))
   `(swiper-match-face-3 ((,class (:inherit (modus-theme-intense-yellow)))))
   `(swiper-match-face-4 ((,class (:inherit (modus-theme-intense-green)))))
   ;;;; term
   `(term ((,class (:inherit (default)))))
   `(term-bold ((,class (:weight bold))))
   `(term-color-blue ((,class (:background ,blue :foreground ,blue))))
   `(term-color-cyan ((,class (:background ,cyan :foreground ,cyan))))
   `(term-color-green ((,class (:background ,green :foreground ,green))))
   `(term-color-magenta ((,class (:background ,magenta :foreground ,magenta))))
   `(term-color-red ((,class (:background ,red :foreground ,red))))
   `(term-color-yellow ((,class (:background ,yellow :foreground ,yellow))))
   `(term-underline ((,class (:underline t))))
   ;;;; treemacs
   `(treemacs-directory-collapsed-face ((,class (:foreground ,magenta-alt))))
   `(treemacs-directory-face ((,class (:inherit (dired-directory)))))
   `(treemacs-file-face ((,class (:foreground ,fg-main))))
   `(treemacs-fringe-indicator-face ((,class (:foreground ,fg-main))))
   `(treemacs-git-added-face ((,class (:background ,bg-main :foreground ,green-intense))))
   `(treemacs-git-conflict-face ((,class (:inherit (modus-theme-intense-red) :weight bold))))
   `(treemacs-git-ignored-face ((,class (:foreground ,fg-alt))))
   `(treemacs-git-modified-face ((,class (:foreground ,yellow-alt-other))))
   `(treemacs-git-renamed-face ((,class (:foreground ,cyan-alt-other))))
   `(treemacs-git-unmodified-face ((,class (:foreground ,fg-main))))
   `(treemacs-git-untracked-face ((,class (:foreground ,red-alt-other))))
   `(treemacs-help-column-face ((,class (:underline (:color foreground-color :style line) :inherit (font-lock-keyword-face)))))
   `(treemacs-help-title-face ((,class (:inherit (font-lock-constant-face)))))
   `(treemacs-on-failure-pulse-face ((,class (:inherit (modus-theme-intense-red)))))
   `(treemacs-on-success-pulse-face ((,class (:inherit (modus-theme-intense-green)))))
   `(treemacs-root-face ((,class (:height 1.2 :bold t :underline (:color foreground-color :style line) :inherit (font-lock-constant-face)))))
   `(treemacs-root-remote-disconnected-face ((,class (:inherit (warning treemacs-root-remote-face)))))
   `(treemacs-root-remote-face ((,class (:inherit (font-lock-function-name-face treemacs-root-face)))))
   `(treemacs-root-remote-unreadable-face ((,class (:inherit (treemacs-root-unreadable-face)))))
   `(treemacs-root-unreadable-face ((,class (:strike-through t :inherit (treemacs-root-face)))))
   `(treemacs-tags-face ((,class (:foreground ,blue-alt))))
   `(treemacs-tags-face ((,class (:foreground ,magenta-alt))))
   ;;;; undo-tree
   `(undo-tree-visualizer-active-branch-face ((,class (:foreground ,fg-main :weight bold))))
   `(undo-tree-visualizer-current-face ((,class (:foreground ,blue-intense))))
   `(undo-tree-visualizer-default-face ((,class (:foreground ,fg-alt))))
   `(undo-tree-visualizer-register-face ((,class (:foreground ,magenta-intense))))
   `(undo-tree-visualizer-unmodified-face ((,class (:foreground ,green-intense))))
   ;;;; visual-regexp
   `(vr/group-0 ((,class (:inherit (modus-theme-intense-cyan) :weight bold))))
   `(vr/group-1 ((,class (:inherit (modus-theme-intense-magenta) :weight bold))))
   `(vr/group-2 ((,class (:inherit (modus-theme-intense-blue) :weight bold))))
   `(vr/match-0 ((,class (:inherit (modus-theme-subtle-green)))))
   `(vr/match-1 ((,class (:inherit (modus-theme-subtle-yellow)))))
   `(vr/match-separator-face ((,class (:inherit (modus-theme-intense-red)))))
   ;;;; which-key
   `(which-key-command-description-face ((,class (:foreground ,cyan-alt))))
   `(which-key-group-description-face ((,class (:foreground ,magenta-alt))))
   `(which-key-key-face ((,class (:foreground ,blue-alt :weight bold))))
   `(which-key-local-map-description-face ((,class (:foreground ,cyan-alt))))
   `(which-key-note-face ((,class (:foreground ,fg-alt))))
   `(which-key-separator-face ((,class (:foreground ,fg-dim))))
   `(which-key-special-key-face ((,class (:foreground ,green-alt))))
   ;;;; whitespace-mode
   `(whitespace-big-indent ((,class (:inherit (modus-theme-intense-red)))))
   `(whitespace-empty ((,class (:inherit (modus-theme-intense-magenta)))))
   `(whitespace-hspace ((,class (whitespace-space))))
   `(whitespace-indentation ((,class (:inherit (whitespace-space)))))
   `(whitespace-line ((,class (:inherit (modus-theme-subtle-yellow)))))
   `(whitespace-newline ((,class (:background ,bg-alt :foreground ,fg-alt))))
   `(whitespace-space ((,class (:inherit (whitespace-newline)))))
   `(whitespace-space-after-tab ((,class (:inherit (modus-theme-subtle-magenta)))))
   `(whitespace-space-before-tab ((,class (:inherit (modus-theme-subtle-yellow)))))
   `(whitespace-tab ((,class (:inherit (whitespace-space)))))
   `(whitespace-trailing ((,class (:inherit (modus-theme-intense-red)))))
   ;;;; writegood-mode
   `(writegood-duplicates-face ((,class (:background ,bg-alt :foreground ,red-alt-other :underline (:style wave)))))
   `(writegood-passive-voice-face ((,class (:background ,bg-alt :foreground ,cyan-alt-other :underline (:style wave)))))
   `(writegood-weasels-face ((,class (:background ,bg-alt :foreground ,yellow-alt-other :underline (:style wave)))))))

;;;###autoload
(when load-file-name
  (add-to-list 'custom-theme-load-path
    (file-name-as-directory (file-name-directory load-file-name))))

(provide-theme 'modus-vivendi)

(provide 'modus-vivendi-theme)
;;; modus-vivendi-theme.el ends here
